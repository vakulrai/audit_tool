<?php

/**
 * @file
 * Contains aps_pre_audit.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\node\Entity\Node;

/**
 * Implements hook_help().
 */
function aps_pre_audit_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the aps_pre_audit module.
    case 'help.page.aps_pre_audit':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Contain general functionality of pre Audit') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_theme().
 */
function aps_pre_audit_theme($existing, $type, $theme, $path) {
  return [
   'pre_audit_block' => [
      'path' => $path . '/templates',
      'template' => 'pre-audit-block',
        'variables' => [
          'form' => NULL,
          'data' => NULL,
        ],
    ],
  ];
}


/**
 * Implements hook_theme().
 */
function aps_pre_audit_get_node_value($nid, $field_name) {
  if($nid){
    $user_object = Node::load($nid);
      $fields = $user_object->toArray();
      foreach ($fields as $key => $value) {
        $count_values = count($value);
        $property = isset($value[0]['value']) ? 'value' : 'target_id';
        if (!empty($value[0][$property])) {
          if($count_values > 1){
            foreach ($value as $no => $name) {
              $profile[$key][$no] = $value[$no][$property];
            }
          }
          else{
            $profile[$key] = $value[0][$property];
          }
        }
      }
    return $profile[$field_name];
  }
}

/**
 * Implements hook_form_alter().
 */
function aps_pre_audit_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
  if($form_id == 'node_auditor_report_form'){
    $form['field_refere']['#access'] = FALSE;
    $form['field_assigned_user']['#access'] = FALSE;
  }
  elseif ($form_id == 'node_auditor_report_edit_form') {
    if(\Drupal::request()->query->get('event_reference') && \Drupal::request()->query->get('unit_reference')){
      $event_reference= \Drupal::request()->query->get('event_reference');
      $unit_reference= \Drupal::request()->query->get('unit_reference');
      $node_referenced = [$event_reference, $unit_reference];
      $node_object= node_load_multiple($node_referenced);
      $form['field_refere']['widget']['target_id']['#default_value'] = $node_object;
    }
    $form['field_refere']['#access'] = FALSE;
    $form['field_assigned_user']['#access'] = FALSE;
    $current_user = \Drupal::currentUser();
    $roles = $current_user->getRoles();
    foreach ($roles as $key => $value) {
      $user_role = $value;
    }
    if($user_role == 'auditor' || $user_role == 'auditee'){
      $entity_type_id = 'node';
      $bundle = 'auditor_report';
      // foreach (\Drupal::entityManager()->getFieldDefinitions($entity_type_id, $bundle) as $field_name => $field_definition) {
      //   if (!empty($field_definition->getTargetBundle())) {
      //     $bundleFields[$field_name]['type'] = $field_definition->getType();
      //     $bundleFields[$field_name]['label'] = $field_definition->getLabel();
      //     $form[$field_name]['#access'] = FALSE;
      //     if($field_name == 'field_audit_list' || $field_name == 'field_auditor_signature' || $field_name == 'field_auditee_signature' || $field_name == 'field_hod_signature' || $field_name == 'field_qms_signature'){
      //       $form[$field_name]['#access'] = TRUE;
      //     }
      //   }
      // }
    }
  }
  if($form['#id'] == 'views-exposed-form-planned-audit-listing-planned-audit' || $form['#id'] == 'views-exposed-form-planned-audit-listing-mr-page'){
    $form['title']['#autocomplete_route_name'] = 'aps_pre_audit.title_list';
  }
  if($form_id == 'node_pre_audit_records_form' || $form_id == 'node_pre_audit_records_edit_form'){
    $current_user = \Drupal::currentUser();
    $roles = $current_user->getRoles();
    foreach ($roles as $key => $value) {
      $user_role = $value;
    }
    $form['field_submitted_by']['widget']['#default_value'] = $user_role;
    $form['field_submitted_by']['#access'] = FALSE;
  }

  if($form_id == 'node_internal_documents_form'){
    $form['field_refere']['#access'] = FALSE;
    if($id = \Drupal::request()->query->get('id')){
      $node_object = Node::load($id);
      $form['field_refere']['widget'][0]['target_id']['#default_value'] = $node_object;
    }
  }
  elseif($form_id == 'node_internal_documents_edit_form'){
    $form['field_refere']['#access'] = FALSE;
  }

  if($form_id == 'node_pre_audit_records_form'){
    $form['field_refere']['#access'] = FALSE;
    if($id = \Drupal::request()->query->get('id')){
      $node_object = Node::load($id);
      $form['field_refere']['widget'][0]['target_id']['#default_value'] = $node_object;
    }
  }
  elseif($form_id == 'node_pre_audit_records_edit_form'){
    // $form['field_refere']['#access'] = FALSE;
  }

  if($form_id == 'node_pre_audit_manuals_form'){
    $form['field_refere']['#access'] = FALSE;
    if($id = \Drupal::request()->query->get('id')){
      $node_object = Node::load($id);
      $form['field_refere']['widget'][0]['target_id']['#default_value'] = $node_object;
    }
  }
  elseif($form_id == 'node_pre_audit_manuals_edit_form'){
    $form['field_refere']['#access'] = FALSE;
  }
}