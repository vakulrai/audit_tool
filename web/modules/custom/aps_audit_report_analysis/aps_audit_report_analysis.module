<?php

/**
 * @file
 * Contains aps_audit_report_analysis.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\node\Entity\Node;
/**
 * Implements hook_help().
 */
function aps_audit_report_analysis_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the aps_audit_report_analysis module.
    case 'help.page.aps_audit_report_analysis':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Contain functionality related to audit reports') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_theme().
 */
function aps_audit_report_analysis_theme($existing, $type, $theme, $path) {
  return [
    'time_analysis_block' => [
      'path' => $path . '/templates',
      'template' => 'time-analysis-block',
        'variables' => [
          'audit_effeciency' => NULL,
          'car_effeciency' => NULL,
          'audit_hours' => NULL,
          'car_hours' => NULL,
          'audit_cycle_effeciency' => NULL,
        ],
    ],
    'mradmin_dashboard_coverage' => [
      'path' => $path . '/templates',
      'template' => 'mradmin-dashboard-coverage',
        'variables' => [
          'data' => NULL,
        ],
    ],
    // 'risk_management' => [
    //   'path' => $path . '/templates',
    //   'template' => 'risk-management',
    //     'variables' => [
    //       'risk_chart' => NULL,
    //       'data' => NULL,
    //     ],
    // ],
  ];
}

/**
 * Implements hook_form_alter().
 */
function aps_audit_report_analysis_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
  if($form_id == 'node_auditor_report_edit_form'){
    $form['actions']['submit_report'] = array(
      '#type' => 'submit',
      '#weight' => 999,
      '#limit_validation_errors' => array() ,
      '#button_type' => 'submit',
      '#submit' => array(
        'submit_auditee_audit'
      ) ,
      '#value' => t('Submit Report') ,
    );
  }
  
  if($form_id == 'node_auditor_report_form'){
    foreach (array_keys($form['actions']) as $action) {
      if ($action != 'preview' && isset($form['actions'][$action]['#type']) && $form['actions'][$action]['#type'] === 'submit') {
        $form['actions'][$action]['#submit'][] = 'set_report_moderation';
      }
    }
  }
}

function submit_auditee_audit(array$form, \Drupal\Core\Form\FormStateInterface $form_state){
  $current_uri = trim(\Drupal::request()->getRequestUri(), '/');
  $uri = explode('/', $current_uri);
  if($id = \Drupal::request()->query->get('event_reference')){
    $node_object = Node::load($id);
    $node_object->set('moderation_state', 'submit_audit');
    $node_object->save();
  }
  if($uri[1]){
    $node_object_report = Node::load($uri[1]);
    $node_object_report->set('moderation_state', 'submit_audit');
    $node_object_report->save();
  }

}

function set_report_moderation(array$form, \Drupal\Core\Form\FormStateInterface $form_state){
  $form_values = $form_state->getValues();
  $nid = $form_values['nid'];
  $node_object = Node::load($nid);
  $node_object->set('moderation_state', 'post_audit');
  $node_object->save();
}

function aps_audit_report_analysis_node_access($node, $op, $account) {
 
}