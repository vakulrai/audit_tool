<?php

/**
 * @file
 * Contains aps_audit_planning.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Datetime\DrupalDateTime;

/**
 * Implements hook_help().
 */
function aps_audit_planning_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the aps_audit_planning module.
    case 'help.page.aps_audit_planning':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Contain&#039;s Functionality of Audit Planning') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_theme().
 */
function aps_audit_planning_theme() {
  return [
    'aps_audit_planning' => [
      'render element' => 'children',
    ],
  ];
}

/**
 * Implements hook_form_alter().
 */
function aps_audit_planning_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
  if($form_id == 'node_planned_events_form'){
    if($id= \Drupal::request()->query->get('current')){
      $start_date = \Drupal::request()->query->get('field_start_date');
      $end_date = \Drupal::request()->query->get('field_end_date');
      $start_date_object = new DrupalDateTime($start_date);
      $end_date_object = new DrupalDateTime($end_date);  
      $form['field_time']['widget'][0]['value']['#default_value'] = $start_date_object;
      $form['field_time']['widget'][0]['end_value']['#default_value'] = $end_date_object;
      $form['field_start_date']['widget'][0]['value']['#default_value'] = $start_date_object;
      $form['field_end_date']['widget'][0]['value']['#default_value'] = $end_date_object;
      $form['field_start_date']['#access'] = FALSE;
      $form['field_end_date']['#access'] = FALSE;
    }
  }
  elseif ($form_id == 'node_planned_events_form') {
    $form['field_start_date']['#access'] = FALSE;
    $form['field_end_date']['#access'] = FALSE;  
  }   
}
