<?php

/**
 * @file
 * Installation and update page for Entity Questions and Answers.
 */

// Add this line at the top of the .install file.
use Drupal\questions_answers\Entity\Question;
use Drupal\questions_answers\Entity\Answer;

/**
 * Repair incorrectly formatted Subscribed/Reported fields.
 */
function questions_answers_update_8101() {
  // Repair incorrectly formatted Answer MapItems.
  $answerIds = \Drupal::entityQuery('questions_answers_answer')
    ->execute();
  foreach ($answerIds as $id) {
    // Load the question entity.
    $answer = \Drupal::entityTypeManager()->getStorage('questions_answers_answer')->load($id);
    // Get the incorrectly formatted reported value.
    $reportedValue = \Drupal::database()->select('questions_answers_answer', 'qaa')
      ->fields('qaa', ['reported'])
      ->condition('qaa.id', $id, '=')
      ->execute()
      ->fetchField();
    $reportedValue = unserialize($reportedValue);
    // If this is in an incorrect format.
    if (!isset($reportedValue['reported'])) {
      foreach ($reportedValue as $value) {
        $answer->addReport($value);
      }
    }
    $answer->save();
  }

  // Repair incorrectly formatted Question MapItems.
  $questionIds = \Drupal::entityQuery('questions_answers_question')
    ->execute();
  foreach ($questionIds as $id) {
    // Load the question entity.
    $question = \Drupal::entityTypeManager()->getStorage('questions_answers_question')->load($id);
    // Get the incorrectly formatted subscribed value.
    $subscribedValue = \Drupal::database()->select('questions_answers_question', 'qaq')
      ->fields('qaq', ['subscribed'])
      ->condition('qaq.id', $id, '=')
      ->execute()
      ->fetchField();
    $subscribedValue = unserialize($subscribedValue);
    // If this is in an incorrect format.
    if (!isset($subscribedValue['subscribed'])) {
      foreach ($subscribedValue as $value) {
        $question->addSubscription($value);
      }
    }
    // Get the incorrectly formatted reported value.
    $reportedValue = \Drupal::database()->select('questions_answers_question', 'qaq')
      ->fields('qaq', ['reported'])
      ->condition('qaq.id', $id, '=')
      ->execute()
      ->fetchField();
    $reportedValue = unserialize($reportedValue);
    // If this is in an incorrect format.
    if (!isset($reportedValue['reported'])) {
      foreach ($reportedValue as $value) {
        $question->addReport($value);
      }
    }
    $question->save();
  }
}
